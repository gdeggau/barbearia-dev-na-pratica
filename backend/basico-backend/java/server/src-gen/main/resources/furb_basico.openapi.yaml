openapi: '3.0.2'

info:
  version: develop-SNAPSHOT
  title: basico
  x-senior-domain: furb
  x-senior-domain-path: furb
  x-senior-service-path: basico
  contact:
    name: Senior X Platform
    url: http://dev.senior.com.br
    email: seniorx-dev@senior.com.br
servers:
  - url: platform.senior.com.br/t/senior.com.br/bridge/1.0/

paths:
  /rest/furb/basico/queries/exportFuncionario:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/exportConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - exportJobId
                properties:
                  exportJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/totalReceitas:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dataInicial
                - dataFinal
              properties:
                dataInicial:
                  type: string
                  format: date
                  description: "Data inicial do atendimento"
                dataFinal:
                  type: string
                  format: date
                  description: "Data final"
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalRecebido
                properties:
                  totalRecebido:
                    type: number
                    format: double
                    description: ""
                  message:
                    type: string
                    description: "Mensagem de negócio"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      parameters:
        - in : query
          name : dataInicial
          description: "Data inicial do atendimento"
          required: true
          schema:
            type: string
            format: date
        - in : query
          name : dataFinal
          description: "Data final"
          required: true
          schema:
            type: string
            format: date
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalRecebido
                properties:
                  totalRecebido:
                    type: number
                    format: double
                    description: ""
                  message:
                    type: string
                    description: "Mensagem de negócio"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/totalDespesas:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dataInicial
                - dataFinal
              properties:
                dataInicial:
                  type: string
                  format: date
                  description: ""
                dataFinal:
                  type: string
                  format: date
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalGastos
                properties:
                  totalGastos:
                    type: number
                    format: double
                    description: ""
                  message:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      parameters:
        - in : query
          name : dataInicial
          description: ""
          required: true
          schema:
            type: string
            format: date
        - in : query
          name : dataFinal
          description: ""
          required: true
          schema:
            type: string
            format: date
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalGastos
                properties:
                  totalGastos:
                    type: number
                    format: double
                    description: ""
                  message:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/getMetadata:
    post:
      description: "Default 'getMetadata' query. Every service must handle this command and return metadata in the format requested."
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metadataFormat:
                  type: string
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                properties:
                  metadata:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      description: "Default 'getMetadata' query. Every service must handle this command and return metadata in the format requested."
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      parameters:
        - in : query
          name : metadataFormat
          description: ""
          schema:
            type: string
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - metadata
                properties:
                  metadata:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/exportServico:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/exportConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - exportJobId
                properties:
                  exportJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/exportAtendimento:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/exportConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - exportJobId
                properties:
                  exportJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/totalLucro:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dataInicial
                - dataFinal
              properties:
                dataInicial:
                  type: string
                  format: date
                  description: ""
                dataFinal:
                  type: string
                  format: date
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalLucro
                properties:
                  totalLucro:
                    type: number
                    format: double
                    description: ""
                  message:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      parameters:
        - in : query
          name : dataInicial
          description: ""
          required: true
          schema:
            type: string
            format: date
        - in : query
          name : dataFinal
          description: ""
          required: true
          schema:
            type: string
            format: date
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalLucro
                properties:
                  totalLucro:
                    type: number
                    format: double
                    description: ""
                  message:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/helloWorld:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - who
              properties:
                who:
                  type: string
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - helloWorldMessage
                properties:
                  helloWorldMessage:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      parameters:
        - in : query
          name : who
          description: ""
          required: true
          schema:
            type: string
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - helloWorldMessage
                properties:
                  helloWorldMessage:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/getDependencies:
    post:
      description: "Returns a list with all dependencies from this service, along with their respective versions"
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - dependencies
                properties:
                  dependencies:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/dependency'
                      minimum: 1
                    description: "List with this service dependencies"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      description: "Returns a list with all dependencies from this service, along with their respective versions"
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - dependencies
                properties:
                  dependencies:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/dependency'
                      minimum: 1
                    description: "List with this service dependencies"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/queries/exportFregues:
    post:
      description: ""
      tags:
        - Queries
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/exportConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - exportJobId
                properties:
                  exportJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  /rest/furb/basico/actions/importFuncionario:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/importConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - importJobId
                properties:
                  importJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/actions/importServico:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/importConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - importJobId
                properties:
                  importJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/actions/obterUrlUploadFoto:
    post:
      description: "Obtém a URL para upload da foto"
      tags:
        - Actions
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: "Id da foto, opcional, caso não tenha gera um e retorna"
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - version
                  - url
                properties:
                  id:
                    type: string
                    description: "identificador da foto"
                  version:
                    type: string
                    description: "versão do arquivo para commit"
                  url:
                    type: string
                    description: "url para upload da foto"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/actions/importAtendimento:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/importConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - importJobId
                properties:
                  importJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/actions/gravarFoto:
    post:
      description: "Grava a foto que foi upada"
      tags:
        - Actions
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - version
              properties:
                id:
                  type: string
                  description: "identificador da foto"
                version:
                  type: string
                  description: "versão que será gravada, obtida no obterUrlFoto"
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    type: string
                    allOf:
                    - $ref: '#/components/schemas/fotoOperationResult'
                    description: "resultado da operação"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/actions/obterUrlDownloadFoto:
    post:
      description: "Obtém a URL para download da foto"
      tags:
        - Actions
      x-senior-visibility: PRIVATE
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  description: "Id da foto"
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - url
                properties:
                  url:
                    type: string
                    description: "url para download da foto"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /rest/furb/basico/actions/importFregues:
    post:
      description: ""
      tags:
        - Actions
      x-senior-visibility: PUBLIC
      security :
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/importConfig'
                  description: ""
      parameters:
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - importJobId
                properties:
                  importJobId:
                    type: string
                    description: ""
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  /basico/entities/fregues:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        required: true
        content:
          applicaton/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/fregues'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fregues'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/fregues'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fregues'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          schema:
            type: number
        - name: size
          in: query
          schema:
            type: number
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fregues'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/fregues/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fregues'
      responses:
        200:
          description: Ok
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/fregues'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fregues'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fregues'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fregues'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/fregues/bulk:
    post:
      tags:
        - Bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/fregues'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/funcionario:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        required: true
        content:
          applicaton/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/funcionario'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/funcionario'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/funcionario'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/funcionario'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          schema:
            type: number
        - name: size
          in: query
          schema:
            type: number
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/funcionario'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/funcionario/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/funcionario'
      responses:
        200:
          description: Ok
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/funcionario'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/funcionario'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/funcionario'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/funcionario'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/funcionario/bulk:
    post:
      tags:
        - Bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/funcionario'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/servico:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        required: true
        content:
          applicaton/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/servico'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servico'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/servico'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servico'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          schema:
            type: number
        - name: size
          in: query
          schema:
            type: number
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/servico'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/servico/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servico'
      responses:
        200:
          description: Ok
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/servico'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servico'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servico'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servico'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/servico/bulk:
    post:
      tags:
        - Bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/servico'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/atendimento:
    post:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        required: true
        content:
          applicaton/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/atendimento'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/atendimento'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/atendimento'
      responses:
        200:
          description: 'The created resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/atendimento'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: offset
          in: query
          schema:
            type: number
        - name: size
          in: query
          schema:
            type: number
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/atendimento'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/atendimento/{id}:
    put:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/atendimento'
      responses:
        200:
          description: Ok
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/atendimento'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    patch:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/atendimento'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/atendimento'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    get:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/atendimento'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
    delete:
      tags:
        - CRUD
      x-senior-visibility: PRIVATE
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  
  /basico/entities/atendimento/bulk:
    post:
      tags:
        - Bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                 $ref: '#/components/schemas/atendimento'
      responses:
        200:
          description: 'The bulk creation has created resources'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
  

components:
  securitySchemes:
    bearerAuth:
      name: Authorization 
      type: apiKey
      in: header
  schemas:
    fotoOperationResult:
      description: "Enumeração que define o resultado da gravação da foto"
      type: string
      enum:
        - SUCCESS
        - ERROR
      
    
    userNotificationKind:
      description: "User notification kind."
      type: string
      enum:
        - Operational
        - Management
        - News
      
    
    userNotificationPriority:
      description: "User notification priority."
      type: string
      enum:
        - Error
        - Alert
        - None
      
    
    eventEmailFormat:
      description: "Format of the email"
      type: string
      enum:
        - HTML
        - PLAIN_TEXT
      
    
    fieldType:
      description: ""
      type: string
      enum:
        - BINARY
        - BOOLEAN
        - DATE
        - DATETIME
        - DOUBLE
        - ENUM
        - INTEGER
        - MONEY
        - STRING
        - TIME
      
    
    fileFormat:
      description: ""
      type: string
      enum:
        - CSV
        - FLAT
        - JSON
        - XML
      
    
    hookFunction:
      description: ""
      type: string
      enum:
        - BEFORE_PARSE
        - BEFORE_CONVERSION
        - ON_ERROR
        - VALIDATE
      
    
    eventType:
      description: ""
      type: string
      enum:
        - CHUNK
        - DOWNLOAD
        - ERROR
        - FINISH
        - START
      
    
    errorStrategy:
      description: ""
      type: string
      enum:
        - CALL_SCRIPT
        - IGNORE
        - STOP
      
    
    status:
      description: ""
      type: string
      enum:
        - DONE
        - DONE_WITH_ERRORS
        - DOWNLOADING
        - ERROR
        - NOT_STARTED
        - RUNNING
      
    
    errorType:
      description: ""
      type: string
      enum:
        - CONVERT_ERROR
        - SERVICE_ERROR
      
    fregues:
      description: "Entidade que representa o fregues"
      type: object
      required:
        - nome
        - dataNascimento
        - email
        - endereco
      properties:
        id:
          type: string
          format: uuid
          description: "Chave primaria"
        nome:
          type: string
          description: "Nome do cliente"
        dataNascimento:
          type: string
          format: date
          description: "Data de nascimento"
        email:
          type: string
          description: "Emal"
        cpf:
          type: string
          description: "CPF do cliente"
        telefone:
          type: string
          description: "telefone"
        endereco:
          type: string
          description: "Endereco"
        idFoto:
          type: string
          description: "id da foto"
    
    funcionario:
      description: "cliente entidade"
      type: object
      required:
        - nome
        - dataNascimento
        - email
        - cpf
        - endereco
        - nomeUsuario
        - senha
        - tipo
        - salario
      properties:
        id:
          type: string
          format: uuid
          description: "chave"
        nome:
          type: string
          description: "nome"
        dataNascimento:
          type: string
          format: date
          description: "data nascimento"
        email:
          type: string
          description: "email"
        cpf:
          type: string
          description: "cpf"
        endereco:
          type: string
          description: "endereco"
        nomeUsuario:
          type: string
          description: "nomeUsuario"
        senha:
          type: string
          description: "senha"
        tipo:
          type: string
          description: "flag tipo"
        salario:
          type: number
          format: double
          description: "salario"
        idFoto:
          type: string
          description: "idFoto"
    
    servico:
      description: "Servico entidade"
      type: object
      required:
        - descricao
        - valor
      properties:
        id:
          type: string
          format: uuid
          description: "chave"
        descricao:
          type: string
          description: "descricao"
        valor:
          type: number
          format: double
          description: "valor"
    
    atendimento:
      description: "Atendimento entidade"
      type: object
      required:
        - fregues
        - funcionario
        - dataAtendimento
        - valorTotal
        - servicos
      properties:
        id:
          type: string
          format: uuid
          description: "chave"
        fregues:
          type: object
          allOf:
            - $ref: '#/components/schemas/fregues'
          description: "cliente"
        funcionario:
          type: object
          allOf:
            - $ref: '#/components/schemas/funcionario'
          description: "funcionario"
        dataAtendimento:
          type: string
          format: date
          description: "data atendimento"
        valorTotal:
          type: number
          format: double
          description: "valor total"
        servicos:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/servico'
            minimum: 1
          description: "servicos"
    
    notifyUserEventPayload:
      description: "Represents a regular user event notification payload"
      discriminator: 
        propertyName: _discriminator
      type: object
      required:
        - notificationKind
        - notificationPriority
        - notificationSubject
        - notificationContent
        - sourceDomain
        - sourceService
        - destinationUser
        - _discriminator
      properties:
        notificationClass:
          type: string
          description: "Class of notification"
        notificationOrigin:
          type: string
          description: "Origin of notification. Free text. Optional."
        notificationKind:
          type: string
          allOf:
          - $ref: '#/components/schemas/userNotificationKind'
          description: "Notification kind."
        notificationPriority:
          type: string
          allOf:
          - $ref: '#/components/schemas/userNotificationPriority'
          description: "Notification priority."
        notificationSubject:
          type: string
          description: "Notification subject."
        notificationContent:
          type: string
          description: "Notification content."
        sourceDomain:
          type: string
          description: "Domain that generates the notification."
        sourceService:
          type: string
          description: "Service that generates the notification."
        destinationUser:
          type: string
          description: "Username of the destination user."
        link:
          type: string
          description: "Notification link"
        _discriminator:
          type: string
          description: ""
    
    emailNotifyUserEventPayload:
      description: "Represents an email notification payload"
      allOf:
      - $ref: '#/components/schemas/notifyUserEventPayload'
      - 
        type: object
        required:
          - from
        properties:
          from:
            type: string
            description: "Email sender address"
          sendTo:
            type: array
            items:
              type: string
            description: "Additional recipients to send the email to"
          format:
            type: string
            allOf:
            - $ref: '#/components/schemas/eventEmailFormat'
            description: "Email format"
    
    pushNotifyUserEventPayload:
      description: "Represents a push notification payload"
      allOf:
      - $ref: '#/components/schemas/notifyUserEventPayload'
      - 
        type: object
        required:
          - applicationId
        properties:
          applicationId:
            type: string
            description: "Apple/Google application id"
    
    blobReference:
      description: "Default blob reference type. Every service defines its own."
      type: object
      required:
        - targetObjectId
      properties:
        domainName:
          type: string
          description: "The domain the blob belongs to."
        serviceName:
          type: string
          description: "The service the blob belongs to."
        targetObjectId:
          type: string
          description: "The basic id of the blob."
        targetCopyId:
          type: string
          description: "The id of the blob copy."
    
    basicErrorPayload:
      description: "Default error payload type. Every service defines its own."
      type: object
      properties:
        message:
          type: string
          description: "The user-facing error message, if any."
        errorCode:
          type: string
          description: "The program-accessible (and service-specific) error code."
    
    importError:
      description: ""
      type: object
      required:
        - errorType
        - lineNumber
        - bean
        - message
        - exceptionClass
      properties:
        errorType:
          type: string
          allOf:
          - $ref: '#/components/schemas/errorType'
          description: ""
        lineNumber:
          type: integer
          format: int64
          description: ""
        bean:
          type: string
          description: ""
        message:
          type: string
          description: ""
        exceptionClass:
          type: string
          description: ""
    
    fielddto:
      description: ""
      type: object
      required:
        - id
        - name
        - fieldType
      properties:
        id:
          type: integer
          format: int64
          description: ""
        name:
          type: string
          description: ""
        fieldType:
          type: string
          allOf:
          - $ref: '#/components/schemas/fieldType'
          description: ""
        start:
          type: integer
          format: int64
          description: ""
        size:
          type: integer
          format: int64
          description: ""
        maskPattern:
          type: string
          description: ""
    
    hookdto:
      description: ""
      type: object
      required:
        - hookFunction
        - script
      properties:
        hookFunction:
          type: string
          allOf:
          - $ref: '#/components/schemas/hookFunction'
          description: ""
        script:
          type: string
          description: ""
    
    layoutdto:
      description: ""
      type: object
      required:
        - id
        - description
        - fileFormat
        - errorStrategy
        - skipLines
        - fields
      properties:
        id:
          type: integer
          format: int64
          description: ""
        description:
          type: string
          description: ""
        fileFormat:
          type: string
          allOf:
          - $ref: '#/components/schemas/fileFormat'
          description: ""
        errorStrategy:
          type: string
          allOf:
          - $ref: '#/components/schemas/errorStrategy'
          description: ""
        delimiter:
          type: string
          description: ""
        skipLines:
          type: integer
          format: int64
          description: ""
        fields:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/fielddto'
            minimum: 1
          description: ""
        hooks:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/hookdto'
          description: ""
    
    importReport:
      description: ""
      type: object
      required:
        - id
        - startTime
        - endTime
        - uri
        - beanClass
        - serviceClass
        - layout
        - sucessCount
        - errorsCount
        - filteredCount
        - skippedCount
      properties:
        id:
          type: string
          description: ""
        startTime:
          type: string
          format: date-time
          description: ""
        endTime:
          type: string
          format: date-time
          description: ""
        uri:
          type: string
          description: ""
        beanClass:
          type: string
          description: ""
        serviceClass:
          type: string
          description: ""
        layout:
          type: object
          allOf:
            - $ref: '#/components/schemas/layoutdto'
          description: ""
        sucessCount:
          type: integer
          format: int64
          description: ""
        errorsCount:
          type: integer
          format: int64
          description: ""
        filteredCount:
          type: integer
          format: int64
          description: ""
        skippedCount:
          type: integer
          format: int64
          description: ""
        importErrors:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/importError'
          description: ""
    
    exportEventStatus:
      description: ""
      type: object
      required:
        - importerId
        - eventType
        - recordCount
      properties:
        importerId:
          type: string
          description: ""
        eventType:
          type: string
          allOf:
          - $ref: '#/components/schemas/eventType'
          description: ""
        recordCount:
          type: integer
          format: int64
          description: ""
    
    importEventStatus:
      description: ""
      type: object
      required:
        - importerId
        - eventType
        - status
        - recordCount
      properties:
        importerId:
          type: string
          description: ""
        eventType:
          type: string
          allOf:
          - $ref: '#/components/schemas/eventType'
          description: ""
        status:
          type: string
          allOf:
          - $ref: '#/components/schemas/status'
          description: ""
        errorMessage:
          type: string
          description: ""
        recordCount:
          type: integer
          format: int64
          description: ""
        importReport:
          type: object
          allOf:
            - $ref: '#/components/schemas/importReport'
          description: ""
    
    exportConfig:
      description: ""
      type: object
      required:
        - uri
        - layout
        - async
        - errorStrategy
      properties:
        uri:
          type: string
          description: ""
        layout:
          type: object
          allOf:
            - $ref: '#/components/schemas/layoutdto'
          description: ""
        async:
          type: boolean
          description: ""
        errorStrategy:
          type: string
          description: ""
    
    importConfig:
      description: ""
      type: object
      required:
        - uri
        - layout
        - async
        - batchSize
        - errorStrategy
      properties:
        uri:
          type: string
          description: ""
        layout:
          type: object
          allOf:
            - $ref: '#/components/schemas/layoutdto'
          description: ""
        async:
          type: boolean
          description: ""
        batchSize:
          type: integer
          format: int64
          description: ""
        errorStrategy:
          type: string
          allOf:
          - $ref: '#/components/schemas/errorStrategy'
          description: ""
    
    dependency:
      description: "Represents a service dependency"
      type: object
      required:
        - domain
        - service
        - version
      properties:
        domain:
          type: string
          description: "Domain of the dependency service"
        service:
          type: string
          description: "Name of the dependency service"
        version:
          type: string
          description: "Version of the dependency service"
    genericError:
      properties:
        message:
          type: string
          description: Messaging describing the error.
        reason:
          type: string
          description: A symbolic code identifying the category of the reason of the error.
          enum:
            - BAD_REQUEST
            - UNAUTHORIZED
            - PAYMENT_REQUIRED
            - FORBIDDEN
            - OBJECT_NOT_FOUND
            - REQUEST_TIMEOUT
            - GONE
            - UNPROCESSABLE
            - INTERNAL_ERROR
            - NOT_IMPLEMENTED
            - SERVICE_UNAVAILABLE
            - INSUFFICIENT_STORAGE
