domain furb

service basico {
    endpoints {
        // add actions, queries, events and signals here
        query helloWorld {
            in {
                who : string
            }
            out {
                helloWorldMessage : string
            }
        }
        
        "Obtém a URL para upload da foto"
        action obterUrlUploadFoto{
            in{
                "Id da foto, opcional, caso não tenha gera um e retorna"
                id: string?
            }
            out{
                "identificador da foto"
                id: string 
                "versão do arquivo para commit"
                version: string 
                "url para upload da foto"
                url: string
            }
        }
        "Grava a foto que foi upada"
        action gravarFoto{
            in{
                "identificador da foto"
                id: string
                "versão que será gravada, obtida no obterUrlFoto"
                version: string
            }
            out{
                "resultado da operação"
                result: fotoOperationResult
            }
        }
        "Obtém a URL para download da foto"
        action obterUrlDownloadFoto{
            in{
                "Id da foto"
                id: string
            }
            out{
                "url para download da foto"
                url: string
            }
        }
    }
    types {
    	"Enumeração que define o resultado da gravação da foto"
        enumeration fotoOperationResult{
            "Sucesso"
            SUCCESS 
            "Erro"
            ERROR
        }
    }
    entities {
    	 "Entidade que representa o fregues"
		fixed entity fregues{
		    "Chave primaria"
		    id: uuid?
		    "Nome do cliente"
		    nome: string
		    "Data de nascimento"
		    dataNascimento: date
		    "Emal"
		    email: string
		    "CPF do cliente"
		    cpf: string?
		    "telefone"
		    telefone: string?
		    "Endereco"
		    endereco: string
		    "id da foto"
		    idFoto: string?
		}
		
		"cliente entidade"
		fixed entity funcionario{
			"chave"
		    id: uuid?
		    "nome"
		    nome: string
		    "data nascimento"
		    dataNascimento: date
		    "email"
		    email: string
		    "cpf"
		    cpf: string
		    "endereco"
		    endereco: string
		    "nomeUsuario"
		    nomeUsuario: string
		    "senha"
		    senha: string
		    "flag tipo"
		    tipo: string
		    "salario"
		    salario: double
		    "idFoto"
		    idFoto: string?
		}
		
		"Servico entidade"
		fixed entity servico{
			"chave"
			id: uuid?
			"descricao"
			descricao: string
			"valor"
			valor: double
		}
		
		"Atendimento entidade"
		fixed entity atendimento{
			"chave"
			id: uuid?
			"cliente"
			fregues: fregues
			"funcionario"
			funcionario: funcionario
			"data atendimento"
			dataAtendimento: date
			"valor total"
			valorTotal: double
			"servicos"
			servicos: servico*
		}
		
    }
}